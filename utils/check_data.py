import asyncio
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å Python
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from sqlalchemy import text
from database.database import get_session

async def check_database_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n")
    
    async for session in get_session():
        try:
            # –ü–æ–¥—Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            result = await session.execute(text("SELECT COUNT(*) FROM users;"))
            users_count = result.scalar()
            
            # –ü–æ–¥—Å—á–µ—Ç —Å–ª–æ–≤
            result = await session.execute(text("SELECT COUNT(*) FROM words;"))
            words_count = result.scalar()
            
            # –ü–æ–¥—Å—á–µ—Ç —Å–≤—è–∑–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-—Å–ª–æ–≤–æ
            result = await session.execute(text("SELECT COUNT(*) FROM user_words;"))
            user_words_count = result.scalar()
            
            # –ü–æ–¥—Å—á–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫
            result = await session.execute(text("SELECT COUNT(*) FROM training_sessions WHERE completed_at IS NOT NULL;"))
            completed_sessions = result.scalar()
            
            print(f"üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö:")
            print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}")
            print(f"   üìö –°–ª–æ–≤ –≤ —Å–ª–æ–≤–∞—Ä–µ: {words_count}")
            print(f"   üîó –°–≤—è–∑–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å-—Å–ª–æ–≤–æ: {user_words_count}")
            print(f"   üéØ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {completed_sessions}")
            
            if words_count > 0:
                print(f"\nüìñ –ü—Ä–∏–º–µ—Ä—ã —Å–ª–æ–≤:")
                result = await session.execute(text("SELECT word, morpheme_type FROM words LIMIT 5;"))
                words = result.fetchall()
                for word, morpheme_type in words:
                    print(f"   ‚Ä¢ {word} ({morpheme_type})")
            
            if users_count > 0:
                print(f"\nüë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö:")
                result = await session.execute(text("SELECT telegram_id, first_name, username FROM users LIMIT 3;"))
                users = result.fetchall()
                for telegram_id, first_name, username in users:
                    name = first_name or username or f"ID:{telegram_id}"
                    print(f"   ‚Ä¢ {name} (Telegram ID: {telegram_id})")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É user_words
            result = await session.execute(text("PRAGMA table_info(user_words);"))
            columns = result.fetchall()
            column_names = [col[1] for col in columns]
            
            print(f"\nüîß –ü–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ user_words:")
            for col in column_names:
                marker = "üÜï" if col == 'correct_answers_count' else "   "
                print(f"{marker} {col}")
            
            if 'correct_answers_count' in column_names:
                print(f"\n‚úÖ –ù–æ–≤–æ–µ –ø–æ–ª–µ 'correct_answers_count' –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!")
            else:
                print(f"\n‚ùå –ü–æ–ª–µ 'correct_answers_count' –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!")
            
            # –û–±—â–∏–π –≤—ã–≤–æ–¥
            if words_count > 0 or users_count > 0:
                print(f"\nüéâ –û–¢–õ–ò–ß–ù–û! –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:")
                print(f"   ‚úÖ {words_count} —Å–ª–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã")
                print(f"   ‚úÖ {users_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã") 
                print(f"   ‚úÖ –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∞")
                print(f"\nüöÄ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é!")
            else:
                print(f"\n‚ö†Ô∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞ - –¥–∞–Ω–Ω—ã–µ –Ω–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
                print(f"   –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–∞ –¥—Ä—É–≥–∞—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

if __name__ == "__main__":
    asyncio.run(check_database_data()) 