import sqlite3

def direct_database_check():
    """–ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ SQLite"""
    
    print("üîç –ü–†–Ø–ú–ê–Ø –ü–†–û–í–ï–†–ö–ê –ë–ê–ó–´ –î–ê–ù–ù–´–•")
    print("="*40)
    
    db_path = "../vocabulary_bot.db"
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–¥—Å—á–µ—Ç –∑–∞–ø–∏—Å–µ–π
        cursor.execute("SELECT COUNT(*) FROM users;")
        users = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM words;")
        words = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM user_words;")
        user_words = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM training_sessions WHERE completed_at IS NOT NULL;")
        sessions = cursor.fetchone()[0]
        
        cursor.execute("SELECT COUNT(*) FROM training_answers;")
        answers = cursor.fetchone()[0]
        
        print(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –î–ê–ù–ù–´–•:")
        print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users}")
        print(f"   üìö –°–ª–æ–≤: {words}")
        print(f"   üîó –°–≤—è–∑–µ–π user_words: {user_words}")
        print(f"   üéØ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫: {sessions}")
        print(f"   üìù –û—Ç–≤–µ—Ç–æ–≤ –≤ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö: {answers}")
        
        if words > 0:
            print(f"\nüìñ –ü–†–ò–ú–ï–†–´ –°–õ–û–í:")
            cursor.execute("SELECT word, morpheme_type, explanation FROM words LIMIT 5;")
            sample_words = cursor.fetchall()
            for word, morph_type, explanation in sample_words:
                exp_text = f" ({explanation})" if explanation else ""
                print(f"   ‚Ä¢ {word} [{morph_type}]{exp_text}")
        
        if user_words > 0:
            print(f"\nüéØ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ü–†–ê–í–ò–õ–¨–ù–´–ú –û–¢–í–ï–¢–ê–ú:")
            cursor.execute("SELECT COUNT(*) FROM user_words WHERE correct_answers_count > 0;")
            with_answers = cursor.fetchone()[0]
            
            cursor.execute("SELECT COUNT(*) FROM user_words WHERE correct_answers_count >= 10;")
            auto_learned = cursor.fetchone()[0]
            
            cursor.execute("SELECT COUNT(*) FROM user_words WHERE is_learned = 1;")
            total_learned = cursor.fetchone()[0]
            
            print(f"   üéØ –°–ª–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏: {with_answers}")
            print(f"   üèÜ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã—É—á–µ–Ω–Ω—ã—Ö (10+ –æ—Ç–≤–µ—Ç–æ–≤): {auto_learned}")
            print(f"   ‚úÖ –í—Å–µ–≥–æ –≤—ã—É—á–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤: {total_learned}")
            
            # –¢–æ–ø —Å–ª–æ–≤ –ø–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ç–≤–µ—Ç–∞–º
            cursor.execute("""
                SELECT w.word, uw.correct_answers_count, uw.is_learned
                FROM user_words uw 
                JOIN words w ON uw.word_id = w.id 
                WHERE uw.correct_answers_count > 0 
                ORDER BY uw.correct_answers_count DESC 
                LIMIT 10;
            """)
            top_words = cursor.fetchall()
            
            if top_words:
                print(f"\nüèÜ –¢–û–ü –°–õ–û–í –ü–û –ü–†–ê–í–ò–õ–¨–ù–´–ú –û–¢–í–ï–¢–ê–ú:")
                for word, count, learned in top_words:
                    learned_mark = "‚úÖ" if learned else "üìö"
                    print(f"   {learned_mark} {word}: {count} –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã user_words
        print(f"\nüîß –°–¢–†–£–ö–¢–£–†–ê –¢–ê–ë–õ–ò–¶–´ USER_WORDS:")
        cursor.execute("PRAGMA table_info(user_words);")
        columns = cursor.fetchall()
        
        for col in columns:
            col_id, col_name, col_type, not_null, default_val, pk = col
            marker = "üÜï" if col_name == 'correct_answers_count' else "   "
            print(f"{marker} {col_name} ({col_type})")
        
        conn.close()
        
        print(f"\nüéâ –ò–¢–û–ì:")
        if words > 0 and user_words > 0:
            print(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ!")
            print(f"‚úÖ –ù–æ–≤–æ–µ –ø–æ–ª–µ 'correct_answers_count' –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
            print(f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º!")
            print(f"\nüöÄ –ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞: python main.py")
        else:
            print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø—É—Å—Ç–∞ –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")

if __name__ == "__main__":
    direct_database_check() 